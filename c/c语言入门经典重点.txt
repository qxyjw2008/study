1、从main()函数返回0表示，程序正常终止，而返回非0值表示异常。

2、为什么使用\?是因为三字母序列：
	printf("What??!\n")
	输出What|
	因为??!会转换为|。所以需要在第二个问好的地方进行转义\?

3、垃圾值：即上次使用这块内存空间时遗留在此的值

4、ctype.h头文件提供的toupper()和tolower()函数可以把字符转为大写和小写。
	islower()小谢字幕
	isupper()大写字母
	isalnum()大写或小写字母，或者十进制的数字
	iscntrl()控制字符
	isprint()可打印字符，包括空格
	isgraph()可打印字符，不包括空格
	isdigit()十进制数字('0'-'9')
	isxdigit()十六进制数字('0'-'9','A'-'F','a'-'f')
	isblank()标准空白字符(空格，'\t')
	isspace()空位字符(空格，'\n','\t','\v','\r','\f')
	ispunct()Isspace()和isalnum()返回false的可打印字符
	isalpha()大写或小写字母
	
5、生成随机数
	每次调用rand()函数，它都会返回一个随机整数，这个值在0到<stdlib.h>定义的RAND_MAX之间。由rand()函数产生的整数称为伪随机数，因为真正的随机数只能在自然的过程中产生，而不能通过运算法则产生。
	rand()函数使用一个起始的种子值生成一系列数字，对于一个特定的种子，所产生的序列数永远是相同的。如果使用这个函数和默认的种子值，就总是得到相同的序列数。
	因此每次执行程序时，必须产生一个不同的种子值。此时可以使用另一个库函数：在<time.h>头文件中声明的函数time()。time()函数会把自1970年1月1日起至今的总秒数返回为一个整数，因为时间永不停歇，所以每次执行程序时，都会得到不同的值。time()函数需要一个参数NULL，NULL实在<stdlib.h>中定义的符号，表示不引用任何内容。
	因此，要在每次执行程序时得到不同的伪随机序列，可以使用以下的语句：
	srand(time(NULL));
	int chosen = 0;
	int limit = 20;
	chosen = rand() % limit;	//生成0到limit-1的开开区间的随机数
	
6、位运算符技巧
	异或^（两数相等为0，不等为1）用法：
		（1）、与1异或，可以使特定位翻转
		（2）、与0异或，保留其值
		（3）、交换两值，不使用临时变量。a = a^b, b = b^a, a = a^b
			为什么可以这么算：因为两个相同数异或得到的结果是0，而0与任何数的异或值都不变。所以可以利用a^b^b=a，a^b^a=b这个原则把a作为临时值，进行乾坤大挪移。
		 (4)、a^b作为半加器的和位，a&b作为半加器的进位，利用(a&b)<<1 + (a^b)得到a+b的值。
			所以a和b的平均值，可以用(a&b) + (a^b)>>1得到

7、memset、strcpy、memcpy
	strcpy:原型 extern char *strcpy(char *dest,char *src)
		   用法 #include
		   功能 把src所指由NULL结束的字符串复制到dest所指的数组中
		   说明 src和dest所指内存区域不可以重叠dest必须有足够的空间来容纳src的字符串。返回指向dest的指针。
	memcpy:原型 extern void *memcpy(void *dest, void *src, unsigned int count)
		   用法 #include
		   功能 由src所指内存区域复制count个字节到dest所指内存区域
		   说明 src和dest所指内存区域不能重叠，函数返回指向dest的指针。
	memset
		   原型 extern void *memset(void *buffer, int c, int count)
		   用法 #include
		   功能 把buffer所指内存区域的前count个字节设置成字符c
		   说明 返回指向buffer的指针

8、for循环
	for (int count=1; count<=10; ++count)
	第一个表达式在循环开始时执行，只执行一次。它声明count，并初始化为1
	第二个表达式在每个循环开始时计算。如果结果是true，循环就继续，否则，循环就停止
	第三个表达式在每次循环结束时执行。它递增count

9、寻址运算符
	&：只把这个变量名称用作函数的参数，函数就可以使用变量存储的值。而把寻址运算符放在变量名称之前，函数就可以利用这个变量的地址，修改在这个变量中存储的值。

10、计算数组个数
	double values[5] = {1.5, 2.5, 3.5, 4.5, 5.5}
	size_t length = sizeof(values)/sizeof(values[0]);

11、字符串
	每个字符串的末尾都添加了代码值为0的特殊字符，这个字符称为空字符，写为\0。c中得字符总是由\0字符结束，所以字符串的长度永远比字符串中得字符多1。

